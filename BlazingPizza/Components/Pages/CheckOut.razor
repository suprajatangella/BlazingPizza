@page "/checkout"

@using BlazingPizza.Services

@inject OrderState OrderState
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<PageTitle>Blazing Pizza - Checkout</PageTitle>

<div class="main">
    <EditForm Model="OrderState.Order.DeliveryAddress" OnValidSubmit="PlaceOrder">
    <div class="checkout-cols">
        <div class="checkout-order-details">
            <h4>Review order</h4>
            <OrderReview Order="OrderState.Order" />
        </div>
        <div class="checkout-delivery-address">
            <h4>Deliver to...</h4>
            <AddressEditor Address="OrderState.Order.DeliveryAddress" />
        </div>
    </div>

    <button class="checkout-button btn btn-warning" @onclick="PlaceOrder">
        Place order
    </button>
        <DataAnnotationsValidator />
        <ValidationSummary />
    </EditForm>
</div>


<link rel="stylesheet" href="css/site.css" />

@code {
    async Task PlaceOrder()
    {
        var response = await HttpClient.PostAsJsonAsync($"{NavigationManager.BaseUri}orders", OrderState.Order);
        var newOrderId = await response.Content.ReadFromJsonAsync<int>();
        OrderState.ResetOrder();
        NavigationManager.NavigateTo($"myorders/{newOrderId}");
    }
}
